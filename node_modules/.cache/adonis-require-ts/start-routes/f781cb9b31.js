"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Route_1 = __importDefault(global[Symbol.for('ioc.use')]("Adonis/Core/Route"));
Route_1.default.group(() => {
    Route_1.default.post('/guardarSensor/:request', 'SensoresController.guardarMongo');
    Route_1.default.get('/verSensor/:id', 'SensoresController.verSensor');
    Route_1.default.get('/verSensores', 'SensoresController.verSensores');
    Route_1.default.put('/modificarSensor/:request', 'SensoresController.modificar');
    Route_1.default.post('/guardarMedicion/:request', 'SensoresController.guardarMedicion');
    Route_1.default.get('/cambiarStatus', 'ServosController.cambiarStatus');
    Route_1.default.get('/obtenerStatus', 'ServosController.obtenerStatus');
    Route_1.default.get('/valoresSensores/:id', 'SensoresController.US');
    Route_1.default.delete('/borrarSensor/:id', 'SensoresController.borrarSensor');
    Route_1.default.get('/valoresSensoresx/:id', 'SensoresController.values');
    Route_1.default.get('/logout', 'AuthController.Logout');
}).middleware('auth:api');
Route_1.default.post('/login/:request', 'AuthController.Login');
Route_1.default.post('/storeUser/:request', 'UsuariosController.store');
Route_1.default.get('/', (ctx) => {
    ctx.response.send('hello world');
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsicm91dGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBb0JBLG9GQUEwQztBQUMxQyxlQUFLLENBQUMsS0FBSyxDQUFDLEdBQUUsRUFBRTtJQUNaLGVBQUssQ0FBQyxJQUFJLENBQUMseUJBQXlCLEVBQUMsaUNBQWlDLENBQUMsQ0FBQTtJQUN2RSxlQUFLLENBQUMsR0FBRyxDQUFDLGdCQUFnQixFQUFDLDhCQUE4QixDQUFDLENBQUE7SUFDMUQsZUFBSyxDQUFDLEdBQUcsQ0FBQyxjQUFjLEVBQUMsZ0NBQWdDLENBQUMsQ0FBQTtJQUMxRCxlQUFLLENBQUMsR0FBRyxDQUFDLDJCQUEyQixFQUFDLDhCQUE4QixDQUFDLENBQUE7SUFDckUsZUFBSyxDQUFDLElBQUksQ0FBQywyQkFBMkIsRUFBQyxvQ0FBb0MsQ0FBQyxDQUFBO0lBQzVFLGVBQUssQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLEVBQUMsZ0NBQWdDLENBQUMsQ0FBQTtJQUM1RCxlQUFLLENBQUMsR0FBRyxDQUFDLGdCQUFnQixFQUFDLGdDQUFnQyxDQUFDLENBQUE7SUFDNUQsZUFBSyxDQUFDLEdBQUcsQ0FBQyxzQkFBc0IsRUFBQyx1QkFBdUIsQ0FBQyxDQUFBO0lBQ3pELGVBQUssQ0FBQyxNQUFNLENBQUMsbUJBQW1CLEVBQUMsaUNBQWlDLENBQUMsQ0FBQTtJQUNuRSxlQUFLLENBQUMsR0FBRyxDQUFDLHVCQUF1QixFQUFDLDJCQUEyQixDQUFDLENBQUE7SUFDOUQsZUFBSyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUMsdUJBQXVCLENBQUMsQ0FBQTtBQUNoRCxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDLENBQUE7QUFDekIsZUFBSyxDQUFDLElBQUksQ0FBQyxpQkFBaUIsRUFBQyxzQkFBc0IsQ0FBQyxDQUFBO0FBQ3BELGVBQUssQ0FBQyxJQUFJLENBQUMscUJBQXFCLEVBQUMsMEJBQTBCLENBQUMsQ0FBQTtBQUM1RCxlQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDLEdBQUcsRUFBRSxFQUFFO0lBQ3JCLEdBQUcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFBO0FBQ2xDLENBQUMsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLypcclxufC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbnwgUm91dGVzXHJcbnwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG58XHJcbnwgVGhpcyBmaWxlIGlzIGRlZGljYXRlZCBmb3IgZGVmaW5pbmcgSFRUUCByb3V0ZXMuIEEgc2luZ2xlIGZpbGUgaXMgZW5vdWdoXHJcbnwgZm9yIG1ham9yaXR5IG9mIHByb2plY3RzLCBob3dldmVyIHlvdSBjYW4gZGVmaW5lIHJvdXRlcyBpbiBkaWZmZXJlbnRcclxufCBmaWxlcyBhbmQganVzdCBtYWtlIHN1cmUgdG8gaW1wb3J0IHRoZW0gaW5zaWRlIHRoaXMgZmlsZS4gRm9yIGV4YW1wbGVcclxufFxyXG58IERlZmluZSByb3V0ZXMgaW4gZm9sbG93aW5nIHR3byBmaWxlc1xyXG58IOKUnOKUgOKUgCBzdGFydC9yb3V0ZXMvY2FydC50c1xyXG58IOKUnOKUgOKUgCBzdGFydC9yb3V0ZXMvY3VzdG9tZXIudHNcclxufFxyXG58IGFuZCB0aGVuIGltcG9ydCB0aGVtIGluc2lkZSBgc3RhcnQvcm91dGVzLnRzYCBhcyBmb2xsb3dzXHJcbnxcclxufCBpbXBvcnQgJy4vcm91dGVzL2NhcnQnXHJcbnwgaW1wb3J0ICcuL3JvdXRlcy9jdXN0b21lcidcclxufFxyXG4qL1xyXG5cclxuaW1wb3J0IFJvdXRlIGZyb20gJ0Bpb2M6QWRvbmlzL0NvcmUvUm91dGUnXHJcblJvdXRlLmdyb3VwKCgpPT57XHJcbiAgICBSb3V0ZS5wb3N0KCcvZ3VhcmRhclNlbnNvci86cmVxdWVzdCcsJ1NlbnNvcmVzQ29udHJvbGxlci5ndWFyZGFyTW9uZ28nKVxyXG4gICAgUm91dGUuZ2V0KCcvdmVyU2Vuc29yLzppZCcsJ1NlbnNvcmVzQ29udHJvbGxlci52ZXJTZW5zb3InKVxyXG4gICAgUm91dGUuZ2V0KCcvdmVyU2Vuc29yZXMnLCdTZW5zb3Jlc0NvbnRyb2xsZXIudmVyU2Vuc29yZXMnKVxyXG4gICAgUm91dGUucHV0KCcvbW9kaWZpY2FyU2Vuc29yLzpyZXF1ZXN0JywnU2Vuc29yZXNDb250cm9sbGVyLm1vZGlmaWNhcicpXHJcbiAgICBSb3V0ZS5wb3N0KCcvZ3VhcmRhck1lZGljaW9uLzpyZXF1ZXN0JywnU2Vuc29yZXNDb250cm9sbGVyLmd1YXJkYXJNZWRpY2lvbicpXHJcbiAgICBSb3V0ZS5nZXQoJy9jYW1iaWFyU3RhdHVzJywnU2Vydm9zQ29udHJvbGxlci5jYW1iaWFyU3RhdHVzJylcclxuICAgIFJvdXRlLmdldCgnL29idGVuZXJTdGF0dXMnLCdTZXJ2b3NDb250cm9sbGVyLm9idGVuZXJTdGF0dXMnKVxyXG4gICAgUm91dGUuZ2V0KCcvdmFsb3Jlc1NlbnNvcmVzLzppZCcsJ1NlbnNvcmVzQ29udHJvbGxlci5VUycpXHJcbiAgICBSb3V0ZS5kZWxldGUoJy9ib3JyYXJTZW5zb3IvOmlkJywnU2Vuc29yZXNDb250cm9sbGVyLmJvcnJhclNlbnNvcicpXHJcbiAgICBSb3V0ZS5nZXQoJy92YWxvcmVzU2Vuc29yZXN4LzppZCcsJ1NlbnNvcmVzQ29udHJvbGxlci52YWx1ZXMnKVxyXG4gICAgUm91dGUuZ2V0KCcvbG9nb3V0JywnQXV0aENvbnRyb2xsZXIuTG9nb3V0JylcclxufSkubWlkZGxld2FyZSgnYXV0aDphcGknKVxyXG5Sb3V0ZS5wb3N0KCcvbG9naW4vOnJlcXVlc3QnLCdBdXRoQ29udHJvbGxlci5Mb2dpbicpXHJcblJvdXRlLnBvc3QoJy9zdG9yZVVzZXIvOnJlcXVlc3QnLCdVc3Vhcmlvc0NvbnRyb2xsZXIuc3RvcmUnKVxyXG5Sb3V0ZS5nZXQoJy8nLCAoY3R4KSA9PiB7XHJcbiAgY3R4LnJlc3BvbnNlLnNlbmQoJ2hlbGxvIHdvcmxkJylcclxufSlcclxuXHJcbiJdfQ==